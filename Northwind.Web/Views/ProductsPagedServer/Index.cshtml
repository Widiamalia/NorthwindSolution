@model X.PagedList.IPagedList<Northwind.Contracts.Dto.Product.ProductDto>
@using X.PagedList.Mvc.Core

<link href="~/css/PagedList.css" rel="stylesheet" type="text/css"/>

@{
    ViewData["Title"] = "Index";
}

<h1>Product Service Pagination Run at Server</h1>

@using (Html.BeginForm("Index","ProductsService",FormMethod.Get)){
    <div>
        <p>
            Find By ProductName : @Html.TextBox("SearchString",ViewBag.CurrentFilter as string)
            <input type="submit" value="Search"/>
            PageSize : @Html.DropDownList("FetchSize",
                ViewBag.PagedList as SelectList,"5",
                new{
                     @class="dropdown",
                     @onchange="getFetchSize(this.value)"
                }
         )
        </p>
    </div>
}


<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">Sort | </a>@Html.DisplayNameFor(model => model.FirstOrDefault().ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().QuantityPerUnit)
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["PriceSortParm"]">Sort|</a>@Html.DisplayNameFor(model => model.FirstOrDefault().UnitPrice)
            </th>
            <td>
                @Html.DisplayNameFor(model => model.FirstOrDefault().UnitsOnOrder)
            </td>
            <td>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DataSortParm"]">Sort</a>
                @Html.DisplayNameFor(model => model.FirstOrDefault().CategoryDto.CategoryName)
            </td>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.QuantityPerUnit)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitsOnOrder)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryDto.CategoryName)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ProductId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ProductId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
@Html.PagedListPager(
    Model,
    page => Url.Action("Index", new {page,currentFilter=ViewBag.CurrentFilter}))

    <script>
        function getFetchSize(value){
            document.location.href = "/ProductsPagedServer?FetchSize="+value;
        }
    </script>